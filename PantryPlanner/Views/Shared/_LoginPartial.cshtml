@using Microsoft.AspNetCore.Identity
@using PantryPlanner.Services
@using PantryPlanner.Extensions
@inject SignInManager<PantryPlannerUser> SignInManager
@inject UserManager<PantryPlannerUser> UserManager
@inject PantryPlannerContext DbContext
@{
    KitchenService kitchenService = null;
    PantryPlannerUser user = null;

    @if (User.Identity.IsAuthenticated)
    {
        kitchenService = new KitchenService(DbContext);
        user = await UserManager.GetUserFromCookieOrJwtAsync(User);
    }
}

<ul class="navbar-nav">
    @if (User.Identity.IsAuthenticated)
    {
        List<Kitchen> myKitchens = kitchenService.GetAllKitchensForUser(user);

        if (myKitchens?.Count > 0)
        {
            for (int i = 0; i < myKitchens.Count; i++)
            {

            }
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link text-dark">Create Kitchen</a>
            </li>
        }

        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
